#include <stdio.h>
#include "driver/gpio.h"
#include "esp_timer.h"
#include "freertos/FreeRTOS.h"
#include "freertos/task.h"

//DEIXEI AS MESMAS GPIOS QUE USEI NOS DIAGRAMAS (BLOCO E ESQUEMÁTICO)
#define LED0 40
#define LED1 45
#define LED2 48
#define LED3 47
#define BOTAO_INC 16
#define BOTAO_MODO 10

#define DEBOUNCE_US 150000

volatile int valor = 0;
volatile int passo = 1;
volatile int64_t ultCliqueA = 0;
volatile int64_t ultCliqueB = 0;

void mostrar_nos_leds(int n) {
    gpio_set_level(LED0, n & 0x01);
    gpio_set_level(LED1, (n >> 1) & 0x01);
    gpio_set_level(LED2, (n >> 2) & 0x01);
    gpio_set_level(LED3, (n >> 3) & 0x01);
}

void trata_botao_inc(void* arg) {
    int64_t agora = esp_timer_get_time();
    if (agora - ultCliqueA > DEBOUNCE_US) {
        valor = (valor + passo) & 0x0F;
        mostrar_nos_leds(valor);
        ultCliqueA = agora;
    }
}

void trata_botao_modo(void* arg) {
    int64_t agora = esp_timer_get_time();
    if (agora - ultCliqueB > DEBOUNCE_US) {
        passo = (passo == 1) ? 2 : 1;
        ultCliqueB = agora;
    }
}

void app_main(void) {
    gpio_config_t cfg_leds = {
        .pin_bit_mask = (1ULL << LED0) | (1ULL << LED1) |
                        (1ULL << LED2) | (1ULL << LED3),
        .mode = GPIO_MODE_OUTPUT
    };
    gpio_config(&cfg_leds);

    gpio_config_t cfg_botoes = {
        .pin_bit_mask = (1ULL << BOTAO_INC) | (1ULL << BOTAO_MODO),
        .mode = GPIO_MODE_INPUT,
        .pull_up_en = 1,
        .intr_type = GPIO_INTR_NEGEDGE
    };
    gpio_config(&cfg_botoes);

    gpio_install_isr_service(0);
    gpio_isr_handler_add(BOTAO_INC, trata_botao_inc, NULL);
    gpio_isr_handler_add(BOTAO_MODO, trata_botao_modo, NULL);

    mostrar_nos_leds(valor);

    while (1) {
        vTaskDelay(pdMS_TO_TICKS(100));
    }
}
